% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/univariate_Gaussian_fusion.R
\name{progressive_fusion_uniGaussian}
\alias{progressive_fusion_uniGaussian}
\title{Progressive Monte Carlo Fusion}
\usage{
progressive_fusion_uniGaussian(
  N_schedule,
  time_schedule,
  base_samples,
  mean,
  sd,
  start_beta,
  precondition = TRUE,
  seed = NULL,
  n_cores = parallel::detectCores()
)
}
\arguments{
\item{N_schedule}{vector of length (L-1), where N_schedule[l] is the number 
of samples per node at level l}

\item{time_schedule}{vector of legnth(L-1), where time_schedule[l] is the
time chosen for Fusion at level l}

\item{base_samples}{list of length (1/start_beta), where base_samples[[c]] 
containg the samples for the c-th node in the level}

\item{mean}{mean value}

\item{sd}{standard deviation value}

\item{start_beta}{beta for the base level}

\item{precondition}{logical value to determine if preconditioning value is 
used (TRUE) or not (FALSE). Default is TRUE}

\item{seed}{seed number - default is NULL, meaning there is no seed}

\item{n_cores}{number of cores to use}
}
\value{
A list with components:
\describe{
  \item{samples}{list of length (L-1), where samples[[l]][[i]] are the samples 
                 for level l, node i}
  \item{time}{list of length (L-1), where time[[l]] is the run time for level 
              l, node i}
  \item{rho_acc}{list of length (L-1), where rho_acc[[l]][i] is the acceptance 
                 rate for first fusion step for level l, node i}
  \item{Q_acc}{list of length (L-1), where Q_acc[[l]][i] is the acceptance 
               rate for second fusion step for level l, node i}
  \item{rhoQ_acc}{list of length (L-1), where rhoQ_acc[[l]][i] is the overall 
                  acceptance rate for fusion for level l, node i}
  \item{diffusion_times}{vector of length (L-1), where diffusion_times[l] are 
                         the times for fusion in level l (= time_schedule)}
  \item{precondition_values}{preconditioning values used in the algorithm 
                             for each node}
}
}
\description{
Progressive Monte Carlo Fusion with base level of tempered Gaussians with same mean and standard deviation
}
