% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BLR_fusion.R
\name{obtain_LR_MLE}
\alias{obtain_LR_MLE}
\title{#' @export
maximum_distance_hypercube_to_cv <- function(dim,
                                             beta_hat,
                                             bessel_layers,
                                             transform_mats) {
  hypercube_Z <- hypercube_vertices(bessel_layers = bessel_layers)
  hypercube_X <- t(transform_mats$to_X %*% t(hypercube_Z))
  return(max(sapply(1:nrow(hypercube_X), function(i) scaled_distance(hypercube_X[i,], beta_hat, transform_mats$to_Z))))
}
#' @export
surrounding_hyeprcube <- function(bessel_layers, transform_mats) {
  hypercube_Z <- hypercube_vertices(bessel_layers = bessel_layers)
  hypercube_X <- t(transform_mats$to_X %*% t(hypercube_Z))
  return(lapply(1:ncol(hypercube_X), function(d) list('L' = min(hypercube_X[,d]), 'U' = max(hypercube_X[,d]))))
}}
\usage{
obtain_LR_MLE(dim, data)
}
\description{
#' @export
maximum_distance_hypercube_to_cv <- function(dim,
                                             beta_hat,
                                             bessel_layers,
                                             transform_mats) {
  hypercube_Z <- hypercube_vertices(bessel_layers = bessel_layers)
  hypercube_X <- t(transform_mats$to_X %*% t(hypercube_Z))
  return(max(sapply(1:nrow(hypercube_X), function(i) scaled_distance(hypercube_X[i,], beta_hat, transform_mats$to_Z))))
}
#' @export
surrounding_hyeprcube <- function(bessel_layers, transform_mats) {
  hypercube_Z <- hypercube_vertices(bessel_layers = bessel_layers)
  hypercube_X <- t(transform_mats$to_X %*% t(hypercube_Z))
  return(lapply(1:ncol(hypercube_X), function(d) list('L' = min(hypercube_X[,d]), 'U' = max(hypercube_X[,d]))))
}
}
