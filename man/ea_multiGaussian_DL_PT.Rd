% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multivariate_Gaussian_fusion.R
\name{ea_multiGaussian_DL_PT}
\alias{ea_multiGaussian_DL_PT}
\title{Diffusion probability for the Exact Algorithm for Langevin diffusion for
multivariate tempered Gaussian distribution}
\usage{
ea_multiGaussian_DL_PT(
  x0,
  y,
  s,
  t,
  dim,
  mu,
  inv_Sigma,
  inv_Sigma_Z = transform_mats$to_X \%*\% inv_Sigma \%*\% transform_mats$to_X,
  beta,
  precondition_mat,
  transform_mats,
  diffusion_estimator = "Poisson",
  beta_NB = 10,
  gamma_NB_n_points = 2,
  logarithm
)
}
\arguments{
\item{x0}{start value (vector of length dim)}

\item{y}{end value (vector of length dim)}

\item{s}{start time}

\item{t}{end time}

\item{dim}{dimension}

\item{mu}{vector of length dim for mean}

\item{inv_Sigma}{dim x dim inverse covariance matrix}

\item{beta}{real value}

\item{precondition_mat}{precondition matrix (if non-identity matrix, it should
be the estimated covariance matrix, i.e. a matrix close 
to solve(inv_Sigma) - could run into problems if this
is not the case since a trick is used to compute the
bounds to avoid evaluating phi at 3^d points)}

\item{transform_mats}{list of transformation matrices where 
transform_mats$to_Z is the transformation matrix to Z space
and transform_mats$to_X is the transformation matrix to 
X space}

\item{diffusion_estimator}{choice of unbiased estimator for the Exact Algorithm
between "Poisson" (default) for Poisson estimator
and "NB" for Negative Binomial estimator}

\item{beta_NB}{beta parameter for Negative Binomial estimator (default 10)}

\item{gamma_NB_n_points}{number of points used in the trapezoidal estimation
of the integral found in the mean of the negative
binomial estimator (default is 2)}

\item{logarithm}{logical value to determine if log probability is
returned (TRUE) or not (FALSE)}
}
\value{
acceptance probability of simulating Langevin diffusion with pi =
        multivariate tempered Gaussian distribution
}
\description{
Simulate Langevin diffusion using the Exact Algorithm where pi =
multivariate tempered Gaussian distribution
}
