% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/univariate_Gaussian_fusion.R
\name{ea_uniGaussian_DL_PT}
\alias{ea_uniGaussian_DL_PT}
\title{Diffusion probability for the Exact Algorithm for Langevin diffusion for 
tempered Gaussian distribution}
\usage{
ea_uniGaussian_DL_PT(
  x0,
  y,
  s,
  t,
  mean,
  sd,
  beta,
  precondition,
  diffusion_estimator = "Poisson",
  beta_NB = 10,
  gamma_NB_n_points = 2,
  logarithm
)
}
\arguments{
\item{x0}{start value}

\item{y}{end value}

\item{s}{start time}

\item{t}{end time}

\item{mean}{mean value}

\item{sd}{standard deviation value}

\item{beta}{real value}

\item{precondition}{precondition value (i.e. the covariance for 
the Langevin diffusion)}

\item{diffusion_estimator}{choice of unbiased estimator for the Exact Algorithm
between "Poisson" (default) for Poission estimator
and "NB" for Negative Binomial estimator}

\item{beta_NB}{beta parameter for Negative Binomial estimator (default 10)}

\item{gamma_NB_n_points}{number of points used in the trapezoidal estimation
of the integral found in the mean of the negative
binomial estimator (default is 2)}

\item{logarithm}{logical value to determine if log probability is 
returned (TRUE) or not (FALSE)}
}
\value{
acceptance probability of simulating Langevin diffusion with pi =
        tempered Gaussian distribution
}
\description{
Simulate Langevin diffusion using the Exact Algorithm where pi = 
tempered Gaussian distribution
}
\examples{
mu <- 0.423
sd <- 3.231
beta <- 0.8693
precondition <- 1.243
# Poisson estimator
ea_uniGaussian_DL_PT(x0 = 0,
                     y = 10,
                     s = 0,
                     t = 1,
                     mean = mu,
                     sd = sd,
                     beta = beta,
                     precondition = precondition,
                     logarithm = TRUE)
# NB estimator
ea_uniGaussian_DL_PT(x0 = 0,
                     y = 10,
                     s = 0,
                     t = 1,
                     mean = mu,
                     sd = sd,
                     beta = beta,
                     precondition = precondition,
                     logarithm = TRUE)

}
